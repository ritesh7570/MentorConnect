<%- layout("mentor/layouts/boilerplate") %>

<!-- Main Container for FullCalendar -->
<div class="container mt-3">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">Mentor Schedule</h1>

            <!-- Calendar Container -->
            <div id="calendar"></div>
        </div>
    </div>
</div>

<!-- Modal for Booking Details -->
<div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingModalLabel">Booking Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Title:</strong> <span id="modalTitle"></span></p>
                <p><strong>Start:</strong> <span id="modalStart"></span></p>
                <p><strong>End:</strong> <span id="modalEnd"></span></p>
                <p><strong>Status:</strong> <span id="modalStatus"></span></p>
                <p><strong>Reason:</strong> <span id="modalReason"></span></p>
                <p><strong>Payment Status:</strong> <span id="modalPayment"></span></p>
                <div id="toggleStatusContainer">
                    <label for="toggleReason" class="form-label">Cancellation/Restore Reason:</label>
                    <input type="text" class="form-control" id="toggleReason" placeholder="Enter reason">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="toggleStatusButton">Toggle Status</button>
            </div>
        </div>
    </div>
</div>

<!-- FullCalendar JS and CSS CDN -->
<link href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.0/main.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var calendarEl = document.getElementById('calendar');

        var bookings = <%- JSON.stringify(bookings) %>; // Embed the bookings data

        // Map bookings to FullCalendar event format
        var events = bookings.map(function(booking) {
            let backgroundColor;
            switch (booking.status) {
                case 'pending':
                    backgroundColor = 'orange';
                    break;
                case 'confirmed':
                    backgroundColor = 'green';
                    break;
                case 'cancelled':
                    backgroundColor = 'red';
                    break;
                default:
                    backgroundColor = 'blue';
            }

            return {
                id: booking.bookingId,
                title: booking.title,
                start: booking.start,
                end: booking.end,
                backgroundColor: backgroundColor,
                extendedProps: {
                    status: booking.status,
                    reason: booking.reason,
                    paymentStatus: booking.paymentStatus
                }
            };
        });

        var selectedEvent; // To track the event being toggled

        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'timeGridWeek',
            locale: 'en-IN',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'timeGridWeek,dayGridMonth'
            },
            defaultDate: new Date().toISOString().split('T')[0], // Start with today's date
        validRange: {
            start: new Date().toISOString().split('T')[0] // Disable past dates
        },
            events: events,
            editable: false,
            droppable: false,
            selectable: false,
            eventMouseEnter: function(info) {
                // Display a tooltip for event details
                var tooltip = document.createElement('div');
                tooltip.id = 'eventTooltip';
                tooltip.style.position = 'absolute';
                tooltip.style.zIndex = '1000';
                tooltip.style.background = '#fff';
                tooltip.style.border = '1px solid #ccc';
                tooltip.style.padding = '10px';
                tooltip.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
                tooltip.innerHTML = `
                    <p><strong>Title:</strong> ${info.event.title}</p>
                    <p><strong>Status:</strong> ${info.event.extendedProps.status}</p>
                    <p><strong>Reason:</strong> ${info.event.extendedProps.reason || 'N/A'}</p>
                    <p><strong>Payment Status:</strong> ${info.event.extendedProps.paymentStatus}</p>
                `;
                document.body.appendChild(tooltip);

                document.addEventListener('mousemove', function moveTooltip(e) {
                    tooltip.style.top = e.clientY + 10 + 'px';
                    tooltip.style.left = e.clientX + 10 + 'px';

                    // Remove tooltip on mouse leave
                    info.el.addEventListener('mouseleave', function removeTooltip() {
                        tooltip.remove();
                        document.removeEventListener('mousemove', moveTooltip);
                    });
                });
            },
            eventClick: function(info) {
                selectedEvent = info.event; // Save the selected event

                // Populate modal with booking details
                document.getElementById('modalTitle').textContent = selectedEvent.title;
                document.getElementById('modalStart').textContent = selectedEvent.start.toISOString();
                document.getElementById('modalEnd').textContent = selectedEvent.end.toISOString();
                document.getElementById('modalStatus').textContent = selectedEvent.extendedProps.status;
                document.getElementById('modalReason').textContent = selectedEvent.extendedProps.reason || 'N/A';
                document.getElementById('modalPayment').textContent = selectedEvent.extendedProps.paymentStatus;

                // Reset reason input
                document.getElementById('toggleReason').value = '';

                // Show the modal
                var bookingModal = new bootstrap.Modal(document.getElementById('bookingModal'));
                bookingModal.show();
            }
        });

        // Handle status toggle
        document.getElementById('toggleStatusButton').addEventListener('click', function() {
            if (!selectedEvent) return;

            var reasonInput = document.getElementById('toggleReason').value.trim();

            if (selectedEvent.extendedProps.status !== 'cancelled' && !reasonInput) {
                alert('Please provide a reason for cancellation.');
                return;
            }

            // Toggle status
            var newStatus = selectedEvent.extendedProps.status === 'cancelled' ? 'confirmed' : 'cancelled';
            var newColor = newStatus === 'cancelled' ? 'red' : 'green';

            // Update the event properties
            selectedEvent.setExtendedProp('status', newStatus);
            selectedEvent.setExtendedProp('reason', newStatus === 'cancelled' ? reasonInput : '');
            selectedEvent.setProp('backgroundColor', newColor);

            // Send update to the backend
            fetch('/mentor/update-booking', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    bookingId: selectedEvent.id, // Add bookingId to the request body
                    status: newStatus,
                    reason: reasonInput,
                    
                })
            })
            .then(response => {
                if (response.ok) {
                    alert("Booking status updated successfully!");
                } else {
                    alert("Failed to update booking. Please try again.");
                }
            })
            .catch(err => console.error("Error:", err));

            // Close the modal
            var bookingModal = bootstrap.Modal.getInstance(document.getElementById('bookingModal'));
            bookingModal.hide();
        });

        calendar.render();
    });
</script>
